version: '3.3'

volumes:
  pg_data:
  static:
  media:

services:

  db:
    container_name: foodgram-db
    image: postgres:17
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 30

  backend:
    container_name: foodgram-back
    build: ../backend/foodgram
    env_file: .env
    volumes:
      - static:/backend_static
      - media:/app/media/
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure

  frontend:
    container_name: foodgram-front
    build: ../frontend
    command: cp -r /app/build/. /frontend_static/
    volumes:
      - static:/frontend_static

  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static:/frontend_static
      - ../docs/:/usr/share/nginx/html/api/docs/
      - media:/var/www/media
    depends_on:
      - backend